<?php


return [

    'debug' => config('app.debug'),

    /* === BACK END === */
    /**
     * The url prefix of Omen file manager
     ** default is 'filemanager'
     *! The url prefix must not match any file in public folder
     */
    'urlPrefix' => 'omenfilemanager',


    /**
     * The disk to use for uploads storage
     * 
     * must be set in config/filesystem.php
     ** default is config('filesystems.public')
     *
     ** 'public' => [
     **     'driver' => 'local',
     **     'root' => storage_path('app/public'),
     **     'url' => env('APP_URL').'/storage',
     **     'visibility' => 'public',
     ** ]
     *
     */
    'publicDisk' => config('filesystems.public'),

    /**
     * The path where to store uploaded files
     * on the public disk
     *
     ** default is 'omen/uploads'
     */
    'publicPath' => 'omen/uploads',


    /**
     * The disk to use for Thumbs storage
     * 
     * It is recommended to be the local one since
     * thumbnails are generated by Omen, it should
     * be stored on the same instance
     * Thumbnails are served by Omen only
     * 
     * Everything in private disk is served by Omen
     * and cannot be accessed directly
     * 
     ** default is config('filesystems.default')
     *
     ** 'local' => [
     **      'driver' => 'local',
     **      'root' => storage_path('app'),
     **  ]
     */
    'privateDisk' => config('filesystems.default'),

    /**
     * The path where to store Omen Working Files
     * on the private disk
     * 
     *! Do not point private folder under the public Path
     *! on the same disk, you may expose unwanted files to the internet
     * 
     ** default is 'omen/private'
     */
    'privatePath' => 'omen/private',

    /**
     * When a file is created or uploaded
     * this is used to set its visibility
     * a private file won't be accessible to the internet
     * only to people who have access to Omen
     * 
     ** default is 'private'
     * accepted values are 'private' and 'public'
     */
    'defaultVisibility' => 'private',

    /**
     * Show file types
     * Set this as an array ommiting the file type you do not want
     * to display, eg to show only images set an array like
     * [ 'image' ]
     * default is [ 'file', 'image', 'video', 'audio', 'archive' ]
     * anything other than array will be ignored
     */

    'showFileTypes' => [
        'file', 'image', 'video', 'audio', 'archive'
    ],

    /**
     * Allowed Upload Extensions
     * This will be checked against mimeType
     * 
     * these are ordered for your convenience
     * just add your extension in 'autorizedUploadExtensions' array, anywhere to allow it
     */
    'autorizedUploadExtensions' => [
        'ext_img'       => ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'svg', 'ico'],
        'ext_file'      => ['doc', 'docx', 'rtf', 'pdf', 'xls', 'xlsx', 'txt', 'csv', 'html', 'xhtml', 'psd', 'sql', 'log', 'fla', 'xml', 'ade', 'adp', 'mdb', 'accdb', 'ppt', 'pptx', 'odt', 'ots', 'ott', 'odb', 'odg', 'otp', 'otg', 'odf', 'ods', 'odp', 'css', 'ai', 'kmz', 'dwg', 'dxf', 'hpgl', 'plt', 'spl', 'step', 'stp', 'iges', 'igs', 'sat', 'cgm', 'tiff'],
        'ext_video'     => ['mov', 'mpeg', 'm4v', 'mp4', 'avi', 'mpg', 'wma', "flv", "webm"],
        'ext_audio'     => ['mp3', 'mpga', 'm4a', 'ac3', 'aiff', 'mid', 'ogg', 'wav'],
        'ext_archive'   => ['zip', 'rar', 'gz', 'tar', 'iso', 'dmg', '7z']
    ],

    /**
     * Disallowed Upload Extensions
     * This will be checked against mimeType
     * 
     * these are ordered for your convenience
     * just add your extension in 'deniedUploadExtensions' array, anywhere to block it
     * Files with extension in this list won't be shown in the file manager
     * 
     * this can be set to false if you dont want to block any
     */
    'deniedUploadExtensions' => [
        'php', 'exe', 'msi'
    ],

    /**
     *! Upload max size config
     * 
     * This can't be changed programatically
     * https://www.php.net/manual/en/ini.list.php
     * https://stackoverflow.com/questions/13442270/ini-setupload-max-filesize-200m-not-working-in-php
     * 
     * It needs to be set in php.ini or a .htaccess
     * 
     * two value need to be changed
     * 'upload_max_filesize' and 'post_max_size' because
     * upload is ajax handled
     * 
     * If you want to set a limit under this value change to bellow configuration
     * from false to something like '3M' or just a byte size like 3145728
     */
    'maxUploadSize' => false,

    /* === Intervention image lib config === */
    /**
     * Allocate additionnal memory
     * for Intervention image lib
     * It increases php.ini "memory_limit"
     * Max execution time is set to 30 sec by php as default
     * You can change this here if wanted for
     * files operation
     */
    'fileOperationTimeLimit' => ini_get('max_execution_time') ?? 30,

    /**
     * Allocate additionnal memory
     * for Intervention image lib
     * It increases php.ini "memory_limit"
     */
    'fileOperationMemoryAlloc' => true,

    /**
     * Max allocation for Intervention image lib
     * Intervention image lib won't happen if the operation could exceed
     * this value in memory allocation
     * can contain XM or X where X is a number
     * eg: 64M or 64
     * 
     *! this must not be set bellow php ini_get('memory_limit')
     * 
     * How much memory do i need ?
     * https://www.dotsamazing.com/en/labs/phpmemorylimit
     */
    'fileOperationMaxMemoryAlloc' => '64M',

    /**
     * Allowed gd or imagick
     * for Intervention image lib
     * make sure php has ext-gd or ext-imagick
     * php can be compiled with gd
     */
    'fileOperationImageDriver' => 'gd',

    /**
     * This is used for rename and create functions
     * but not for upload (yet)
     * 
     * default is 3
     */
    'minimumFileLength' => 3,

    /**
     * Allow overwrite on File copy
     * (not on directory)
     */
    'overwriteOnFileCopy' => false,

    /**
     * Allow overwrite on File move
     * (not on directory)
     */
    'overwriteOnFileMove' => true,

    /* === FRONT END === */

    /**
     * Title displayed ( in <title></title>)
     ** default is 'Omen FileManager'
     */
    'title' => 'Omen file manager',

    /**
     * The public path where are stored
     * omen asset files
     * 
     * Change this if you want to modify
     * published assets folder under /public
     ** default is 'vendor/omen'
     */
    'assetPath' => 'vendor/omen',

    /**
     * If set to true you will need to double click to open
     * Folder and files
     * 
     * this does not apply on files action
     */
    'doubleClickToOpen' => true,

    /* === Language === */

    /**
     * Change here to locale you want to display in
     * eg: set 'fr' to display in french
     ** default is config('app.local')
     */
    'locale' => config('app.locale', 'en'),

    /**
     * force locale
     * if you want to display only one locale
     * and don't allow to change it set if here
     * like 'forceLocale' => 'de'
     * 
     * * default is null
     */
    'forceLocale' => null,

    /**
     * Available locales
     * remove locales you don't want to be available
     * add here any custom local you may have added
     * 
     ** default is array('localA', 'localB', ...)
     */

    'locales' => [
        'en', 'fr'
    ],

    /* === JS PART === */

    /**
     * Show a scroll bar for the bread crumb
     * or ellipse the content with js
     ** default is true
     */
    'breadcrumbEllipsis' => true,

    /**
     * The document embed viewer
     * This relies on a third party webservice
     * to display documents (writer, calc, impress)
     * 
     * If this url is not valid display for these documents
     * will be disabled.
     * The required parameter is strictly ###URL### which
     * will be replaced with the document url
     * 
     * if you want to disable this feature just put false value
     * 
     * * default is 'whatEverUrl###URL###'
     */
    'documentEmbedViewer' => 'https://docs.google.com/gview?url=###URL###&embedded=true',

    /**
     * Enable or Disable app shortcuts
     * These works with ALT modifier only
     * 
     * you can override any down there
     * if you want to disable a specific one
     * just put false value eg: 'u' => false
     */
    'enableShorcuts' => true,
    'shorcuts' => [
        'u' => 'upload',
        'i' => 'iconview',
        'l' => 'listview',
        'f' => 'newfile',
        'g' => 'newdirectory',
        'j' => 'about',
        'q' => 'leftpannel',
        '1' => 'filterfiles',
        '2' => 'filterarchives',
        '3' => 'filterimages',
        '4' => 'filtervideo',
        '5' => 'filteraudio',
        'r' => 'reload',
        'a' => 'sortalpha',
        'd' => 'sortdate',
        's' => 'sortsize',
        't' => 'sorttype'
    ],

    /* === CORS Headers === */

    /**
     * ! Touch this only if you know what you are doing
     * 
     * Put in here the trusted domain you need
     * Actually this would be needed only for 'documentEmbedViewer'
     * 
     * unsafe-eval is needed for pdf.js and base64.js
     * 
     * This configuration is for CSP level 3 browsers
     * If you wish more compatibilities set scp rules in script-src
     * "'unsafe-inline'", "https:", "http:", "'strict-dynamic'"
     * 
     * check your urles at https://csp-evaluator.withgoogle.com/
     * 
     ** Note the the scheme (http, https) is mandatory, please use https as much as possible
     ** blob and data are needed on self to display FileReader data (in upload modal)
     *
     *! pdf.js policies are workaround for Firefox bug
     * https://bugzilla.mozilla.org/show_bug.cgi?id=1582115
     */
    'csp' => [
        'default-src' => ["'self'", "data:", "blob:"],
        'script-src' => ["resource://pdf.js/"],
        'style-src' => ["'self'"],
        'frame-src' => ["'self'"],
        'object-src' =>  ["'self'", "blob:"],
        'base-uri' => ["'self'", "resource://pdf.js/web/"],
        'media-src' =>  ["'self'", "blob:"]
    ],

    /**
     * provide X-Frame-Options : sameorigin or deny
     * false => deny, true => sameorigin
     ** default is false
     */
    'useXFrameOptions' => true,


    /* === PROTECTED DONT THOUCH THIS === */
    /**
     *! WARNING: don't touch this
     * is needed to avoid you from
     * publishing config if you dont
     * need to
     * default is true
     */
    'omenIsLoaded' => true,
];
